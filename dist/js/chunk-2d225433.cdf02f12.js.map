{"version":3,"sources":["webpack:///./src/components/ATS/Update.vue","webpack:///./src/components/ATS/Update.vue?26ed"],"names":["class","$route","params","id","loaded","contentId","formFieldsProp","fieldsWithValue","update","$event","filesFromServer","fileReadyForUpload","fileDetachFromUpload","correspondence","components","UpdateForm","FileUpload","data","attachedFiles","formData","FormData","methods","file","this","push","filter","item","name","Object","keys","dataForUpdate","forEach","key","append","method","url","$router","alert","created","get","currentATS","ATSFiles","entries","ATS","fields","fieldKey","fieldValue","value","console","log","render"],"mappings":"0IAEYA,MAAM,qB,mHADd,eAkBM,YAjBF,eAAuF,KAAvF,EAA8B,mCAAgC,eAAE,EAAAC,OAAOC,OAAOC,IAAE,GAGtE,EAAAC,Q,iBADV,eAac,G,MAXTC,UAAW,EAAAJ,OAAOC,OAAOC,GACzBG,eAAgB,EAAAC,gBACZ,SAAM,+BAAE,EAAAC,OAAOC,M,yBAGpB,iBAIE,CAJF,eAIE,GAHGC,gBAAiB,EAAAA,gBACjB,0BAAqB,+BAAE,EAAAC,mBAAmBF,KAC1C,4BAAuB,+BAAE,EAAAG,qBAAqBH,M,oPAazDI,EAAiB,EAAQ,QAIhB,GACXC,WAAW,CAAEC,aAAA,KAAYC,aAAA,MACzBC,KAFW,WAGP,MAAM,CACFJ,iBACAK,cAAe,GACfR,gBAAgB,GAChBS,SAAU,IAAIC,SACdb,gBAAgB,GAChBH,QAAQ,IAGhBiB,QAAQ,CACJV,mBADI,SACeW,GAEfC,KAAKL,cAAcM,KAAKF,IAG5BV,qBANI,SAMiBU,GAEjBC,KAAKL,cAAgBK,KAAKL,cAAcO,QAAO,SAAAC,GAAG,OAAKA,EAAKC,OAAOL,EAAKK,SAGtEnB,OAXF,SAWSS,GAAK,wKAKVW,OAAOC,KAAKZ,EAAKa,eAAeC,SAAQ,SAACC,GAClCf,EAAKa,cAAcE,IAClB,EAAKb,SAASc,OAAOD,EAAKf,EAAKa,cAAcE,OAGrD,EAAKd,cAAca,SAAQ,SAAAT,GACvB,EAAKH,SAASc,OAAO,QAASX,MAXxB,SAcJ,eAAM,CACRY,OAAQ,MACRC,IAAK,OAAF,OAASlB,EAAKZ,WACjBY,KAAM,EAAKE,WAjBL,OAqBV,EAAKiB,QAAQZ,KAAK,KArBR,mDAwBVa,MAAM,SAAD,MAxBK,6DA6BhBC,QApDK,WAoDI,wLAEe,OAAMC,IAAN,cAAiB,EAAKtC,OAAOC,OAAOC,KAFnD,OAMX,IAJMqC,EAFK,OAE0DvB,KAErE,EAAKP,gBAAkB8B,EAAWC,SAElC,MAAoCb,OAAOc,QAAQ,EAAK7B,eAAe8B,IAAIC,QAA3E,eAAmF,yBAAxEC,EAAwE,KAA9DC,EAA8D,KAE/E,EAAKvC,gBAAgBsC,GAArB,iCACOC,GADP,IAEIC,MAAOP,EAAWK,KAK1B,EAAKzC,QAAS,EAEd4C,QAAQC,IAAI,EAAK1C,iBAjBN,+CChFnB,EAAO2C,OAASA,EAED","file":"js/chunk-2d225433.cdf02f12.js","sourcesContent":["<template>\r\n    <div>\r\n        <h1 class=\"font-weight-light\">Измнение транспортного средства {{$route.params.id}}</h1>\r\n        \r\n        <update-form \r\n            v-if=\"loaded\"\r\n            :contentId=\"$route.params.id\" \r\n            :formFieldsProp=\"fieldsWithValue\"\r\n            v-on:update=\"update($event)\"\r\n        >\r\n            \r\n            <FileUpload \r\n                :filesFromServer=\"filesFromServer\"\r\n                @file-ready-for-upload=\"fileReadyForUpload($event)\"\r\n                @file-detach-from-upload=\"fileDetachFromUpload($event)\"\r\n            />\r\n\r\n        </update-form>\r\n\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n\r\nimport UpdateForm from '@/components/basic/UpdateForm.vue'\r\nimport FileUpload from '@/components/elements/FileUpload.vue'\r\n\r\nconst correspondence = require('@/utility/correspondence')\r\n\r\nimport Axios from '@/axios'\r\n\r\nexport default {\r\n    components:{ UpdateForm, FileUpload },\r\n    data(){\r\n        return{\r\n            correspondence,\r\n            attachedFiles: [],\r\n            filesFromServer:[],\r\n            formData: new FormData(),\r\n            fieldsWithValue:{},\r\n            loaded: false\r\n        }\r\n    },\r\n    methods:{\r\n        fileReadyForUpload(file){\r\n\r\n            this.attachedFiles.push(file)\r\n\r\n        },\r\n        fileDetachFromUpload(file){\r\n\r\n            this.attachedFiles = this.attachedFiles.filter(item => item.name!==file.name)\r\n\r\n        },\r\n        async update(data){\r\n\r\n\r\n            try{\r\n\r\n                Object.keys(data.dataForUpdate).forEach((key) => {\r\n                    if(data.dataForUpdate[key])\r\n                        this.formData.append(key, data.dataForUpdate[key])\r\n                })\r\n\r\n                this.attachedFiles.forEach(file => {\r\n                    this.formData.append(\"files\", file)\r\n                })\r\n\r\n                await Axios({\r\n                    method: 'put',\r\n                    url: `ATS/${data.contentId}`,\r\n                    data: this.formData\r\n                })\r\n\r\n                \r\n                this.$router.push(\"/\")\r\n\r\n            }catch(err){\r\n                alert(\"Ошибка\", err)\r\n            }\r\n\r\n        },\r\n    },\r\n    async created(){\r\n\r\n        const currentATS = (await Axios.get(`ATS/${this.$route.params.id}`)).data\r\n\r\n        this.filesFromServer = currentATS.ATSFiles\r\n\r\n        for(const [fieldKey, fieldValue] of Object.entries(this.correspondence.ATS.fields)){\r\n\r\n            this.fieldsWithValue[fieldKey] = {\r\n                ...fieldValue,\r\n                value: currentATS[fieldKey]\r\n            }\r\n\r\n        }\r\n\r\n        this.loaded = true\r\n\r\n        console.log(this.fieldsWithValue)\r\n\r\n    }\r\n}\r\n\r\n</script>","import { render } from \"./Update.vue?vue&type=template&id=0ba4abed&bindings={\\\"correspondence\\\":\\\"data\\\",\\\"attachedFiles\\\":\\\"data\\\",\\\"filesFromServer\\\":\\\"data\\\",\\\"formData\\\":\\\"data\\\",\\\"fieldsWithValue\\\":\\\"data\\\",\\\"loaded\\\":\\\"data\\\",\\\"fileReadyForUpload\\\":\\\"options\\\",\\\"fileDetachFromUpload\\\":\\\"options\\\",\\\"update\\\":\\\"options\\\"}\"\nimport script from \"./Update.vue?vue&type=script&lang=js\"\nexport * from \"./Update.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script"],"sourceRoot":""}